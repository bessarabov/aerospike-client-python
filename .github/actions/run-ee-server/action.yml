name: 'Run EE Server'
description: 'Run EE server'
inputs:
  # All inputs in composite actions are strings
  use-server-rc:
    required: true
    default: false
  server-tag:
    required: true
    default: 'latest'
  # Github Composite Actions can't access secrets
  # so we need to pass them in as inputs
  docker-hub-username:
    required: false
  docker-hub-password:
    required: false
outputs:
  server-docker-ip-address:
    value: ${{ steps.get-server-docker-ip-address.outputs.ip-address }}

runs:
  using: "composite"
  steps:
  - name: Use release server
    if: ${{ inputs.use-server-rc == 'false' }}
    run: echo "SERVER_IMAGE=aerospike/aerospike-server-enterprise" >> $GITHUB_ENV
    shell: bash

  - name: Use release candidate server
    if: ${{ inputs.use-server-rc == 'true' }}
    run: echo "SERVER_IMAGE=aerospike/aerospike-server-enterprise-rc" >> $GITHUB_ENV
    shell: bash

  - name: Log into Docker Hub to get server RC
    if: ${{ inputs.use-server-rc == 'true' }}
    run: docker login --username ${{ inputs.docker-hub-username }} --password ${{ inputs.docker-hub-password }}
    shell: bash

  # Use step output instead of env since we don't want this composite action to interfere with the calling workflow's environment variables
  - name: Get container name to use
    id: get_container_name
    run: echo "container_name=aerospike" >> $GITHUB_OUTPUT
    shell: bash

  - name: Run EE server from Docker image
    run: docker run -d --name ${{ steps.get_container_name.outputs.container_name }} -p 3000-3002:3000-3002 $SERVER_IMAGE:${{ inputs.server-tag }}
    shell: bash

  - name: Wait for EE server to start
    run: sleep 5

  - name: Create config folder to store configs in
    # Cannot create parent directories using docker cp
    # https://docs.docker.com/reference/cli/docker/container/cp/
    run: mkdir configs
    shell: bash

  - name: Grab default aerospike.conf from EE server
    run: docker cp ${{ steps.get_container_name.outputs.container_name }}:/etc/aerospike/aerospike.conf ./configs/aerospike.conf
    shell: bash

  - name: Stop EE server
    run: docker container stop ${{ steps.get_container_name.outputs.container_name }}
    shell: bash

  - name: Remove EE server
    run: docker container rm ${{ steps.get_container_name.outputs.container_name }}
    shell: bash

  - name: Enable security features using aerospike.conf
    # Security stanza
    run: echo -e "security {\n\tenable-quotas true\n}\n" >> ./aerospike.conf
    working-directory: ./configs
    shell: bash

  - name: Run enterprise edition server
    run: docker run -tid -v $(pwd)/configs:/opt/aerospike/etc -p 3000:3000 --name ${{ steps.get_container_name.outputs.container_name }} $SERVER_IMAGE:${{ inputs.server-tag }} asd --config-file /opt/aerospike/etc/aerospike.conf
    shell: bash

  - name: Wait for EE server to start
    run: sleep 5

  - name: Create user in database for tests
    # Use default admin user to create another user for testing
    run: docker exec ${{ steps.get_container_name.outputs.container_name }} asadm --user admin --password admin --enable -e "manage acl create user superuser password superuser roles read-write-udf sys-admin user-admin data-admin"
    shell: bash

  - name: Output internal Docker IP address of server
    id: get-server-docker-ip-address
    run: echo "ip-address=$(docker inspect ${{ steps.get_container_name.outputs.container_name }} -f '{{ .NetworkSettings.IPAddress }}')" >> $GITHUB_OUTPUT
    shell: bash
